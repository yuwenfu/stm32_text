; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\stm32f10x_crc.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\lib\inc -I.\User -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=520 -DVECT_TAB_RAM --omf_browse=.\output\stm32f10x_crc.crf lib\src\stm32f10x_crc.c]
                          THUMB

                          AREA ||i.CRC_CalcBlockCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcBlockCRC PROC
;;;67     *******************************************************************************/
;;;68     u32 CRC_CalcBlockCRC(u32 pBuffer[], u32 BufferLength)
000000  b510              PUSH     {r4,lr}
;;;69     {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;70       u32 index = 0;
000006  2100              MOVS     r1,#0
;;;71       
;;;72       for(index = 0; index < BufferLength; index++)
000008  bf00              NOP      
00000a  e004              B        |L1.22|
                  |L1.12|
;;;73       {
;;;74         CRC->DR = pBuffer[index];
00000c  f8520021          LDR      r0,[r2,r1,LSL #2]
000010  4c03              LDR      r4,|L1.32|
000012  6020              STR      r0,[r4,#0]
000014  1c49              ADDS     r1,r1,#1              ;72
                  |L1.22|
000016  4299              CMP      r1,r3                 ;72
000018  d3f8              BCC      |L1.12|
;;;75       }
;;;76     
;;;77       return (CRC->DR);
00001a  4801              LDR      r0,|L1.32|
00001c  6800              LDR      r0,[r0,#0]
;;;78     }
00001e  bd10              POP      {r4,pc}
;;;79     
                          ENDP

                  |L1.32|
                          DCD      0x40023000

                          AREA ||i.CRC_CalcCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcCRC PROC
;;;51     *******************************************************************************/
;;;52     u32 CRC_CalcCRC(u32 Data)
000000  4601              MOV      r1,r0
;;;53     {
;;;54       CRC->DR = Data;
000002  4802              LDR      r0,|L2.12|
000004  6001              STR      r1,[r0,#0]
;;;55       
;;;56       return (CRC->DR);
000006  6800              LDR      r0,[r0,#0]
;;;57     }
000008  4770              BX       lr
;;;58     
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x40023000

                          AREA ||i.CRC_GetCRC||, CODE, READONLY, ALIGN=2

                  CRC_GetCRC PROC
;;;86     *******************************************************************************/
;;;87     u32 CRC_GetCRC(void)
000000  4801              LDR      r0,|L3.8|
;;;88     {
;;;89       return (CRC->DR);
000002  6800              LDR      r0,[r0,#0]
;;;90     }
000004  4770              BX       lr
;;;91     
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_GetIDRegister PROC
;;;110    *******************************************************************************/
;;;111    u8 CRC_GetIDRegister(void)
000000  4801              LDR      r0,|L4.8|
;;;112    {
;;;113      return (CRC->IDR);
000002  7900              LDRB     r0,[r0,#4]
;;;114    }
000004  4770              BX       lr
;;;115    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40023000

                          AREA ||i.CRC_ResetDR||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;38     *******************************************************************************/
;;;39     void CRC_ResetDR(void)
000000  2001              MOVS     r0,#1
;;;40     {
;;;41       /* Reset CRC generator */
;;;42       CRC->CR = CR_RESET_Set;
000002  4901              LDR      r1,|L5.8|
000004  6088              STR      r0,[r1,#8]
;;;43     }
000006  4770              BX       lr
;;;44     
                          ENDP

                  |L5.8|
                          DCD      0x40023000

                          AREA ||i.CRC_SetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_SetIDRegister PROC
;;;98     *******************************************************************************/
;;;99     void CRC_SetIDRegister(u8 IDValue)
000000  4901              LDR      r1,|L6.8|
;;;100    {
;;;101      CRC->IDR = IDValue;
000002  7108              STRB     r0,[r1,#4]
;;;102    }
000004  4770              BX       lr
;;;103    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40023000
