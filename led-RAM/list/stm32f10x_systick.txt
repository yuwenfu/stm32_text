; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\output\stm32f10x_systick.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\output\stm32f10x_systick.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\lib\inc -I.\User -IE:\Keil_v5\ARM\RV31\INC -IE:\Keil_v5\ARM\CMSIS\Include -IE:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=520 -DVECT_TAB_RAM --omf_browse=.\output\stm32f10x_systick.crf lib\src\stm32f10x_systick.c]
                          THUMB

                          AREA ||i.SysTick_CLKSourceConfig||, CODE, READONLY, ALIGN=1

                  SysTick_CLKSourceConfig PROC
;;;45     *******************************************************************************/
;;;46     void SysTick_CLKSourceConfig(u32 SysTick_CLKSource)
000000  2804              CMP      r0,#4
;;;47     {
;;;48       /* Check the parameters */
;;;49       assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
;;;50     
;;;51       if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
000002  d108              BNE      |L1.22|
;;;52       {
;;;53         SysTick->CTRL |= SysTick_CLKSource_HCLK;
000004  f04f21e0          MOV      r1,#0xe000e000
000008  6909              LDR      r1,[r1,#0x10]
00000a  f0410104          ORR      r1,r1,#4
00000e  f04f22e0          MOV      r2,#0xe000e000
000012  6111              STR      r1,[r2,#0x10]
000014  e007              B        |L1.38|
                  |L1.22|
;;;54       }
;;;55       else
;;;56       {
;;;57         SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
000016  f04f21e0          MOV      r1,#0xe000e000
00001a  6909              LDR      r1,[r1,#0x10]
00001c  f0210104          BIC      r1,r1,#4
000020  f04f22e0          MOV      r2,#0xe000e000
000024  6111              STR      r1,[r2,#0x10]
                  |L1.38|
;;;58       }
;;;59     }
000026  4770              BX       lr
;;;60     
                          ENDP


                          AREA ||i.SysTick_CounterCmd||, CODE, READONLY, ALIGN=1

                  SysTick_CounterCmd PROC
;;;89     *******************************************************************************/
;;;90     void SysTick_CounterCmd(u32 SysTick_Counter)
000000  2801              CMP      r0,#1
;;;91     {
;;;92       /* Check the parameters */
;;;93       assert_param(IS_SYSTICK_COUNTER(SysTick_Counter));
;;;94     
;;;95       if (SysTick_Counter == SysTick_Counter_Enable)
000002  d108              BNE      |L2.22|
;;;96       {
;;;97         SysTick->CTRL |= SysTick_Counter_Enable;
000004  f04f21e0          MOV      r1,#0xe000e000
000008  6909              LDR      r1,[r1,#0x10]
00000a  f0410101          ORR      r1,r1,#1
00000e  f04f22e0          MOV      r2,#0xe000e000
000012  6111              STR      r1,[r2,#0x10]
000014  e00e              B        |L2.52|
                  |L2.22|
;;;98       }
;;;99       else if (SysTick_Counter == SysTick_Counter_Disable) 
000016  1c81              ADDS     r1,r0,#2
000018  b941              CBNZ     r1,|L2.44|
;;;100      {
;;;101        SysTick->CTRL &= SysTick_Counter_Disable;
00001a  f04f21e0          MOV      r1,#0xe000e000
00001e  6909              LDR      r1,[r1,#0x10]
000020  f0210101          BIC      r1,r1,#1
000024  f04f22e0          MOV      r2,#0xe000e000
000028  6111              STR      r1,[r2,#0x10]
00002a  e003              B        |L2.52|
                  |L2.44|
;;;102      }
;;;103      else /* SysTick_Counter == SysTick_Counter_Clear */
;;;104      {
;;;105        SysTick->VAL = SysTick_Counter_Clear;
00002c  2100              MOVS     r1,#0
00002e  f04f22e0          MOV      r2,#0xe000e000
000032  6191              STR      r1,[r2,#0x18]
                  |L2.52|
;;;106      }    
;;;107    }
000034  4770              BX       lr
;;;108    
                          ENDP


                          AREA ||i.SysTick_GetCounter||, CODE, READONLY, ALIGN=1

                  SysTick_GetCounter PROC
;;;140    *******************************************************************************/
;;;141    u32 SysTick_GetCounter(void)
000000  f04f20e0          MOV      r0,#0xe000e000
;;;142    {
;;;143      return(SysTick->VAL);
000004  6980              LDR      r0,[r0,#0x18]
;;;144    }
000006  4770              BX       lr
;;;145    
                          ENDP


                          AREA ||i.SysTick_GetFlagStatus||, CODE, READONLY, ALIGN=1

                  SysTick_GetFlagStatus PROC
;;;157    *******************************************************************************/
;;;158    FlagStatus SysTick_GetFlagStatus(u8 SysTick_FLAG)
000000  b510              PUSH     {r4,lr}
;;;159    {
000002  4601              MOV      r1,r0
;;;160      u32 statusreg = 0, tmp = 0 ;
000004  2200              MOVS     r2,#0
000006  2300              MOVS     r3,#0
;;;161      FlagStatus bitstatus = RESET;
000008  2000              MOVS     r0,#0
;;;162    
;;;163      /* Check the parameters */
;;;164      assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));
;;;165    
;;;166      /* Get the SysTick register index */
;;;167      tmp = SysTick_FLAG >> 3;
00000a  10cb              ASRS     r3,r1,#3
;;;168    
;;;169      if (tmp == 2) /* The flag to check is in CTRL register */
00000c  2b02              CMP      r3,#2
00000e  d103              BNE      |L4.24|
;;;170      {
;;;171        statusreg = SysTick->CTRL;
000010  f04f24e0          MOV      r4,#0xe000e000
000014  6922              LDR      r2,[r4,#0x10]
000016  e002              B        |L4.30|
                  |L4.24|
;;;172      }
;;;173      else          /* The flag to check is in CALIB register */
;;;174      {
;;;175        statusreg = SysTick->CALIB;
000018  f04f24e0          MOV      r4,#0xe000e000
00001c  69e2              LDR      r2,[r4,#0x1c]
                  |L4.30|
;;;176      }
;;;177    
;;;178      if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
00001e  2401              MOVS     r4,#1
000020  408c              LSLS     r4,r4,r1
000022  4014              ANDS     r4,r4,r2
000024  b10c              CBZ      r4,|L4.42|
;;;179      {
;;;180        bitstatus = SET;
000026  2001              MOVS     r0,#1
000028  e000              B        |L4.44|
                  |L4.42|
;;;181      }
;;;182      else
;;;183      {
;;;184        bitstatus = RESET;
00002a  2000              MOVS     r0,#0
                  |L4.44|
;;;185      }
;;;186      return bitstatus;
;;;187    }
00002c  bd10              POP      {r4,pc}
;;;188    
                          ENDP


                          AREA ||i.SysTick_ITConfig||, CODE, READONLY, ALIGN=1

                  SysTick_ITConfig PROC
;;;117    *******************************************************************************/
;;;118    void SysTick_ITConfig(FunctionalState NewState)
000000  b140              CBZ      r0,|L5.20|
;;;119    {
;;;120      /* Check the parameters */
;;;121      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;122    
;;;123      if (NewState != DISABLE)
;;;124      {
;;;125        SysTick->CTRL |= CTRL_TICKINT_Set;
000002  f04f21e0          MOV      r1,#0xe000e000
000006  6909              LDR      r1,[r1,#0x10]
000008  f0410102          ORR      r1,r1,#2
00000c  f04f22e0          MOV      r2,#0xe000e000
000010  6111              STR      r1,[r2,#0x10]
000012  e007              B        |L5.36|
                  |L5.20|
;;;126      }
;;;127      else
;;;128      {
;;;129        SysTick->CTRL &= CTRL_TICKINT_Reset;
000014  f04f21e0          MOV      r1,#0xe000e000
000018  6909              LDR      r1,[r1,#0x10]
00001a  f0210102          BIC      r1,r1,#2
00001e  f04f22e0          MOV      r2,#0xe000e000
000022  6111              STR      r1,[r2,#0x10]
                  |L5.36|
;;;130      }
;;;131    }
000024  4770              BX       lr
;;;132    
                          ENDP


                          AREA ||i.SysTick_SetReload||, CODE, READONLY, ALIGN=1

                  SysTick_SetReload PROC
;;;69     *******************************************************************************/
;;;70     void SysTick_SetReload(u32 Reload)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;71     {
;;;72       /* Check the parameters */
;;;73       assert_param(IS_SYSTICK_RELOAD(Reload));
;;;74     
;;;75       SysTick->LOAD = Reload;
000004  6148              STR      r0,[r1,#0x14]
;;;76     }
000006  4770              BX       lr
;;;77     
                          ENDP

